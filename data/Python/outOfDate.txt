过时的 python 知识、版本
outOfDate





========================================
|-- CentOS7.9 无root 编译安装 Python3.7
----------------------------------------
据我的经验，很多生信 R 包和 anaconda 冲突。
不用 anaconda 后，很多 R 包就很容易安装了。
原因可能是 anaconda 内置的一些 动态链接库 so 文件和系统自带的冲突，一个同名文件只能有一个版本，多个版本则会导致报错。
解决方法似乎也简单，就是彻底放弃 anaconda，把它从 ~/.bashrc 中注释掉，并重新登录系统。
然后重新编译安装 python3。




1. 下载 python3
$ sudo yum install gcc openssl-devel bzip2-devel libffi-devel -y
$ rpm -qa | grep openssl-devel
openssl-devel-1.0.2k-25.el7_9.x86_64

$ wget https://www.python.org/ftp/python/3.7.0/Python-3.7.0.tgz
$ tar -xzf Python-3.7.0.tgz
$ cd Python-3.7.0/


大概率是用的高版本 gcc 
$ gcc --version
gcc (GCC) 12.1.0

$ which gcc
~/software/gcc-12.1.0/bin/gcc



(1) 安装 - 【目录设置的不好，跳过】
$ ./configure --enable-optimizations --prefix=/home/wangjl/
$ make altinstall


这个目录污染太严重，建议重新安装到 /home/$USER/software/python3/，或者更精细的目录 /home/$USER/software/python3.7/
怎么删除干净？
$ whereis python3
python3: /usr/bin/python3 /usr/bin/python3.6 /usr/bin/python3.6m /usr/lib/python3.6 /usr/lib64/python3.6 /usr/include/python3.6m /home/wangjl/bin/python3.7m /home/wangjl/bin/python3.7 /home/wangjl/bin/python3.7m-config /usr/share/man/man1/python3.1.gz


/home/wangjl/bin/python3.7m 
/home/wangjl/bin/python3.7 
/home/wangjl/bin/python3.7m-config

$ cd /home/wangjl/bin/
$ rm python3.7m python3.7 pyvenv-3.7 pydoc3.7 idle3.7 2to3-3.7 python3.7m-config easy_install-3.7 pip3.7

$ cd /home/wangjl/lib
$ rm -rf python3.7/ libpython3.7m.a  pkgconfig

$ cd /home/wangjl/include
$ rm -rf python3.7m/



(2) 换个目录，重新安装
$ mkdir /home/$USER/software/python3/
$ cd /home/wangjl/Downloads/Python-3.7.0
$ ./configure --enable-optimizations --prefix=/home/$USER/software/python3/
$ make -j 16
$ make install

添加到 PATH 
$ vim ~/.bashrc
export PATH=/home/wangjl/software/python3/bin:$PATH

$ source ~/.bashrc

查看位置
$ which python3
~/software/python3/bin/python3
$ which pip3
~/software/python3/bin/pip3

查看版本号
$ python3 -V
Python 3.7.0
$ pip3 -V
pip 10.0.1 from /home/wangjl/software/python3/lib/python3.7/site-packages/pip (python 3.7)







2. 使用 pip 安装 python 包
$ rm -rf ~/.local/bin/snakemake
$ rm -rf ~/.local/bin/snakemake-bash-completion

升级pip
$ pip3 list | grep pip
pip               10.0.1
$ pip3 install --upgrade pip -i https://pypi.douban.com/simple/ 
$ pip3 -V
pip 22.3.1 from /home/wangjl/software/python3/lib/python3.7/site-packages/pip (python 3.7)
$ pip3 list | grep pip
pip               22.3.1


$ pip3 list | grep snakemake
snakemake         7.19.1

$ pip3 list | grep jupyter
$ pip3 install --user -i https://pypi.douban.com/simple/ jupyter
$ pip3 list | grep jupyter
jupyter              1.0.0
...


$ pip3 install --user -i https://pypi.douban.com/simple/ snakemake
$ pip3 list | grep snakemake
snakemake            7.19.1




(2) 也可以添加 pip 的配置文件
$ mkdir ~/.pip/
$ vim ~/.pip/pip.conf 
配置文件内容如下，源地址可以自行修改。 

[global] 
index-url=http://mirrors.aliyun.com/pypi/simple/ 
trusted-host=mirrors.aliyun.com






(3) 这有一个问题：无法调用 snakemake ！！
$ pip3 -V
pip 23.0.1 from /home/wangjl/software/python3/lib/python3.7/site-packages/pip (python 3.7)

$ snakemake -V
bash: snakemake: command not found...

$ which jupyter
~/.local/bin/jupyter




1) 查看安装位置
$ pip3 show pip
Location: /data/wangjl/software/python3/lib/python3.7/site-packages

$ pip3 show snakemake
Location: /home/wangjl/.local/lib/python3.7/site-packages

$ pip3 show jupyter
Location: /home/wangjl/.local/lib/python3.7/site-packages



2) 卸载 
$ pip3 uninstall snakemake
$ pip3 show snakemake
WARNING: Package(s) not found: snakemake
重新安装
$ pip3 install snakemake -i https://pypi.douban.com/simple/ 

$ pip3 list | grep snakemake
snakemake            7.23.1

$ pip3 show snakemake
Location: /data/wangjl/software/python3/lib/python3.7/site-packages

$ which snakemake
~/software/python3/bin/snakemake
$ snakemake -V
Segmentation fault (core dumped)  #启动失败
$ snakemake --help
Segmentation fault (core dumped)




3) 删除掉，使用系统全局安装的py：
注释掉 ~/.bashrc 中的
#export PATH=/home/wangjl/software/python3/bin:$PATH
重新登录。
$ python3 -V
Python 3.6.8

$ which python3
/usr/bin/python3

$ which pip3
/usr/bin/pip3

$ pip3 -V
pip 9.0.3 from /usr/lib/python3.6/site-packages (python 3.6)

$ pip3 install snakemake
Collecting snakemake
  Downloading http://mirrors.aliyun.com/pypi/packages/6e/0d/fb9056fe1c87122bf68d5afbb9ac97b23e8df4c6fd49038f31b382c2c9b3/snakemake-7.8.3.tar.gz (303kB)
    100% |████████████████████████████████| 307kB 445kB/s 
    Complete output from command python setup.py egg_info:
    At least Python 3.7 is required for Snakemake.
最少需要 3.7 版本。






4) 启动 conda 版的py吧
$ vim ~/.bashrc
export PATH=/home/wangjl/software/anaconda3/bin:$PATH

$ source ~/.bashrc
$ pip3 -V
pip 22.3.1 from /home/wangjl/software/anaconda3/lib/python3.7/site-packages/pip (python 3.7)

$ pip3 install snakemake
$ pip3 freeze | grep snakemake
snakemake==7.23.1

$ snakemake --version
7.23.1


$ snakemake --help
帮助文件





ref:
https://www.zhangjunbk.com/article/24676




