深度学习与 tensorflow


CS231n Convolutional Neural Networks for Visual Recognition
	https://cs231n.github.io/convolutional-networks/


https://tyang816.github.io/categories/stanford-cs329p/



========================================
名词解释: 
----------------------------------------


1. two convolutional layers 和 one dense layer 

https://pubmed.ncbi.nlm.nih.gov/31530582/
Fig4: The input DNA sequence is one hot encoded and fed into a CNN composed of two convolutional layers and one dense layer with a final output of a single neuron with linear activation (Methods). 

(1) 卷积层 convolutional layer:

Convolutional layers, which apply a specified number of convolution filters to the image. For each subregion, the layer performs a set of mathematical operations to produce a single value in the output feature map. Convolutional layers then typically apply a ReLU activation function to the output to introduce nonlinearities into the model.

卷积层，就是使用一系列filter对图片做卷积计算，提取特征。并且典型的卷积层会使用ReLU激活函数来引入非线性因数。

卷积的计算过程方法如下图，也就是用filter扫描整个图片，并做wx+b计算：


一般要用激活函数，如 ReLu，引入非线性。
引入非线性的作用：
  a)减少计算 b)避免梯度消失 c)网络的稀疏性，避免过拟合
  引入非线性是为了提取特征的，线性变换的结果还是线性的，没有意义的。


(2) Pooling layers 池化层
池化这个概念相对简单，类似于压缩图片。
max pool即取设定矩形里最大的值作为输出数据。


(3) Dense(fully connected) Layer 稠密层(全连接层) 

通过卷积和池化，然后得到了众多特征，稠密层的每一个节点都与这些特征节点相连构成稠密层(全连接层)。

稠密层的作用就是分类。

简单的说就是每一个特征节点手里握着一定的权重来决定输入是属于那个分类，最终全部特征的权重共同决定了输入所属分类的权重或概率。

也有反对意见: dense 应该不是分类，它的作用是将所有的数据连接在一起，说白了就是把所有的分开的小的感受野组合成整体的感受野。
分类一般是用后面的softmax来实现的。









ref:
https://blog.csdn.net/fenjiehuang/article/details/79247215





========================================
简介: Keras 与 TensorFlow
----------------------------------------
1. Keras: 基于 Python 的深度学习库
Keras 的开发重点是支持快速的实验。能够以最小的时延把你的想法转换为实验结果，是做好研究的关键。

官网 
	https://keras.io/
	https://keras.io/zh/ 中文教程
	
	https://keras.io/getting_started/
	https://keras.io/api/
	https://keras.io/guides/
	https://keras.io/examples/

中文教程
	http://www.uml.org.cn/ai/202011042.asp

英文教程
	https://www.manning.com/books/deep-learning-with-python-second-edition 书。keras 首页推荐。




2. tensorflow
官网 
	https://www.tensorflow.org/ 打不开，被墙了

https://docs.microsoft.com/en-us/azure/databricks/applications/machine-learning/train-model/tensorflow






========================================
安装 TensorFlow
----------------------------------------
1. 官网
https://github.com/tensorflow/tensorflow

To install the current release, which includes support for CUDA-enabled GPU cards (Ubuntu and Windows):

$ pip3 install tensorflow -i https://pypi.douban.com/simple/

查看版本号
$ pip3 freeze | grep -i tensorflow
tensorflow==2.7.0
tensorflow-estimator==2.7.0
tensorflow-io-gcs-filesystem==0.22.0

升级
To update TensorFlow to the latest version, add --upgrade flag to the above commands.


测试 
$ python3 

>>> import tensorflow as tf
>>> tf.add(1, 2).numpy()
2021-11-14 13:04:57.201315: E tensorflow/stream_executor/cuda/cuda_driver.cc:271] failed call to cuInit: CUDA_ERROR_NO_DEVICE: no CUDA-capable device is detected
2021-11-14 13:04:57.201445: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:156] kernel driver does not appear to be running on this host (sustc-HG): /proc/driver/nvidia/version does not exist
2021-11-14 13:04:57.202959: I tensorflow/core/platform/cpu_feature_guard.cc:151] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.

3
>>> hello = tf.constant('Hello, TensorFlow!')
>>> hello.numpy()
b'Hello, TensorFlow!'
>>> quit()
$


(2) 看提示 no CUDA-capable device is detected
显卡支持
https://www.tensorflow.org/install/gpu


查看显卡
$ lspci | grep NVIDIA
65:00.0 VGA compatible controller: NVIDIA Corporation GP106GL [Quadro P2000] (rev a1)
65:00.1 Audio device: NVIDIA Corporation GP106 High Definition Audio Controller (rev a1)

该显卡需要的驱动
$ ubuntu-drivers devices
WARNING:root:_pkg_get_support nvidia-driver-390: package has invalid Support Legacyheader, cannot determine support level
== /sys/devices/pci0000:64/0000:64:00.0/0000:65:00.0 ==
modalias : pci:v000010DEd00001C30sv00001028sd000011B3bc03sc00i00
vendor   : NVIDIA Corporation
model    : GP106GL [Quadro P2000]
driver   : nvidia-driver-460-server - distro non-free
driver   : nvidia-driver-418-server - distro non-free
driver   : nvidia-driver-390 - distro non-free
driver   : nvidia-driver-470-server - distro non-free
driver   : nvidia-driver-450-server - distro non-free
driver   : nvidia-driver-470 - distro non-free recommended
driver   : nvidia-driver-495 - distro non-free
driver   : nvidia-driver-460 - distro non-free
driver   : xserver-xorg-video-nouveau - distro free builtin


（没做）去NVDIA driver search page搜索你的显卡需要的驱动型号并下载
https://www.nvidia.com/Download/Find.aspx
https://www.nvidia.com/download/driverResults.aspx/177149/en-us


禁用nouveau。
打开终端，输入：
$ sudo vim /etc/modprobe.d/blacklist.conf
在blacklist.conf文件末尾加上这两行，并保存：
blacklist nouveau
options nouveau modeset=0

然后执行命令：
$ sudo update-initramfs -u  //应用更改


直接安装显卡驱动
$ sudo apt-get install nvidia-driver-460 #很慢
最后一条输出 update-initramfs: Generating /boot/initrd.img-5.4.0-90-generic


$ sudo lspci -nn | grep NVIDIA
65:00.0 VGA compatible controller [0300]: NVIDIA Corporation GP106GL [Quadro P2000] [10de:1c30] (rev a1)
65:00.1 Audio device [0403]: NVIDIA Corporation GP106 High Definition Audio Controller [10de:10f1] (rev a1)


重启系统
$ sudo reboot

执行下面的命令，查看驱动的安装状态
$ sudo nvidia-smi
$ sudo nvidia-settings


查看NVIDIA版本检验是否安装完成

没重启时
$ nvidia-smi
NVIDIA-SMI has failed because it couldn't communicate with the NVIDIA driver. Make sure that the latest NVIDIA driver is installed and running.



ref:
https://blog.csdn.net/flowrush/article/details/80254301





========================================
----------------------------------------


========================================
----------------------------------------



========================================
----------------------------------------


========================================
----------------------------------------





========================================
----------------------------------------





========================================
----------------------------------------


========================================
----------------------------------------



========================================
----------------------------------------


========================================
----------------------------------------





========================================
----------------------------------------





========================================
----------------------------------------


========================================
----------------------------------------



========================================
----------------------------------------


========================================
----------------------------------------


