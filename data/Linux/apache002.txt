
Apatch服务器的常用配置

使用的是XAMPP套件，win7版。


========================================
DNS服务器设置方法？？
----------------------------------------
安装DNS服务器：http://www.educity.cn/linux/1149396.html


========================================
修改web根目录
----------------------------------------
正确安装好XAMPP后，默认是必须将php文件放到 xampp\htdocs文件夹下才能运行，
如果把主目录修改到 D:/www/文件夹

1、打开文件xampp\apache\conf\httpd.conf
2、文件中找到DocumentRoot "D:/xampp/htdocs"和<Directory "D:/xampp/htdocs">
3、修改为DocumentRoot "D:/www"和<Directory "D:/www">
4、在 D 盘新建一个 www 文件夹，重启apache;

========================================
虚拟域名和二级域名
----------------------------------------
怎么设置虚拟域名：
1.修改apache：
文件位置：xampp\apache\conf\extra\httpd-vhosts.conf
文件末尾加上如下文字，即可设置域名tp.com指向"D:\xampp\htdocs\ThinkPHP"文件夹。
<VirtualHost *:80>
	ServerAdmin **@**.com
	ServerName tp.com
	ServerAlias tp.com, *.tp.com
	DocumentRoot "D:\xampp\htdocs\ThinkPHP"
</VirtualHost>

重启apache服务器。
如果该域名没有在互联网上注册，仅仅是本机方便而使用，则还需要修改本机hosts文件。


2.修改本机dns文件hosts：C:\Windows\System32/drivers/etc/hosts 
这是一个没有后缀名的函数，有可能是隐藏的，且只读，需要先取消只读再修改。
在文件末尾添加一句：

127.0.0.1 tp.com
127.0.0.1 *.tp.com

保存重启apache，即可使用http://tp.com访问D:\xampp\htdocs\ThinkPHP\index.php文件了！





========================================
开启多个域名和子域名的配置文件
----------------------------------------
#
# Use name-based virtual hosting.
#
NameVirtualHost *:80


<VirtualHost *:80>
    ServerAdmin JimmyMall@live.com
    DocumentRoot "F:/xampp/htdocs/"
    ServerName localhost
	ServerAlias localhost
    ErrorLog "logs/localhost-error.log"
    CustomLog "logs/localhost-access.log" common
</VirtualHost>


<VirtualHost *:80>
    ServerAdmin JimmyMall@live.com
    DocumentRoot "F:/xampp/htdocs/eclipsePHP"
    ServerName eclipsePHP.dawnEve.cc
	ServerAlias eclipsePHP.dawnEve.cc
    ErrorLog "logs/eclipsePHP.dawnEve.cc-error.log"
    CustomLog "logs/eclipsePHP.dawnEve.cc-access.log" common
</VirtualHost>


<VirtualHost *:80>
    ServerAdmin JimmyMall@live.com
    DocumentRoot "F:/xampp/htdocs/projects/score"
    ServerName score.dawnEve.cc
	ServerAlias score.dawnEve.cc
    ErrorLog "logs/dawnEve.cc-score-error.log"
    CustomLog "logs/dawnEve.cc-score-access.log" common
</VirtualHost>

<VirtualHost *:80>
    ServerAdmin JimmyMall@live.com
    DocumentRoot "F:/xampp/htdocs/projects/sERP"
    ServerName erp.dawnEve.cc
	ServerAlias erp.dawnEve.cc
    ErrorLog "logs/dawnEve.cc-erp-error.log"
    CustomLog "logs/dawnEve.cc-erp-access.log" common
</VirtualHost>

<VirtualHost *:80>
    ServerAdmin JimmyMall@live.com
    DocumentRoot "F:/xampp/htdocs/think"
    ServerName tp.dawnEve.cc
	ServerAlias tp.dawnEve.cc
    ErrorLog "logs/dawnEve.cc-tp-error.log"
    CustomLog "logs/dawnEve.cc-tp-access.log" common
</VirtualHost>

<VirtualHost *:80>
    ServerAdmin JimmyMall@live.com
    DocumentRoot "F:/xampp/htdocs/weixin"
    ServerName weixin.dawnEve.cc
    ErrorLog "logs/dawnEve.cc-weixin-error.log"
    CustomLog "logs/dawnEve.cc-weixin-access.log" common
</VirtualHost>

<VirtualHost *:80>
    ServerAdmin JimmyMall@live.com
    DocumentRoot "F:/xampp/htdocs/txtBlog"
    ServerName blog.dawnEve.cc
	ServerAlias blog.dawnEve.cc
    ErrorLog "logs/blog.dawnEve.cc-error.log"
    CustomLog "logs/blog.dawnEve.cc-access.log" common
</VirtualHost>

<VirtualHost *:80>
    ServerAdmin JimmyMall@live.com
    DocumentRoot "F:/xampp/htdocs/film"
    ServerName film.dawnEve.cc
	ServerAlias film.dawnEve.cc
    ErrorLog "logs/film.dawnEve.cc-film-error.log"
    CustomLog "logs/film.dawnEve.cc-film-access.log" common
</VirtualHost>

<VirtualHost *:80>
    ServerAdmin JimmyMall@live.com
    DocumentRoot "F:/xampp/htdocs/wordpress/wp_cn"
    ServerName wpcn.dawnEve.cc
	ServerAlias wpcn.dawnEve.cc
    ErrorLog "logs/wpcn.dawnEve.cc-wpcn-error.log"
    CustomLog "logs/wpcn.dawnEve.cc-wpcn-access.log" common
</VirtualHost>

<VirtualHost *:80>
    ServerAdmin JimmyMall@live.com
    DocumentRoot "F:/xampp/htdocs/wordpress/wp_en"
    ServerName wpen.dawnEve.cc
	ServerAlias wpen.dawnEve.cc
    ErrorLog "logs/wpen.dawnEve.cc-wpen-error.log"
    CustomLog "logs/wpen.dawnEve.cc-wpen-access.log" common
</VirtualHost>


<VirtualHost *:80>
    ServerAdmin JimmyMall@live.com
    DocumentRoot "F:/xampp/htdocs/projects/news"
    ServerName dawnEve.cc
	ServerAlias www.dawnEve.cc, dawnEve.cc, *.dawnEve.cc
    ErrorLog "logs/dawnEve.cc-film-error.log"
    CustomLog "logs/dawnEve.cc-film-access.log" common
</VirtualHost>








<VirtualHost *:80>
    ServerAdmin JimmyMall@live.com
    DocumentRoot "F:/xampp/htdocs/peptide"
    ServerName peptide.xyz
	ServerAlias peptide.xyz, www.peptide.xyz
    ErrorLog "logs/peptide.xyz-error.log"
    CustomLog "logs/peptide.xyz-access.log" common
</VirtualHost>

<VirtualHost *:80>
    ServerAdmin JimmyMall@live.com
    DocumentRoot "F:/xampp/htdocs/"
    ServerName innerforum.tk
	ServerAlias innerforum.tk,www.innerforum.tk
    ErrorLog "logs/innerforum.tk-error.log"
    CustomLog "logs/innerforum.tk-access.log" common
</VirtualHost>



<VirtualHost *:80>
    ServerAdmin JimmyMall@live.com
    DocumentRoot "F:/xampp/htdocs/txtBlog"
    ServerName blog.wjl.com
	ServerAlias blog.wjl.com
    ErrorLog "logs/blog.wjl.com-error.log"
    CustomLog "logs/blog.wjl.com-access.log" common
</VirtualHost>


<VirtualHost *:80>
    ServerAdmin JimmyMall@live.com
    DocumentRoot "F:/xampp/htdocs/"
    ServerName wjl.com
	ServerAlias wjl.com
    ErrorLog "logs/wjl.com-error.log"
    CustomLog "logs/wjl.com-access.log" common
</VirtualHost>


<VirtualHost *:80>
    ServerAdmin JimmyMall@live.com
    DocumentRoot "F:/xampp/htdocs/think/SeqManager"
    ServerName seq.dawnEve.cc
	ServerAlias *.dawnEve.cc #开通泛解析
    ErrorLog "logs/dawnEve.cc-film-error.log"
    CustomLog "logs/dawnEve.cc-film-access.log" common
</VirtualHost>

域名匹配一旦成功，后面的就会跳过去。
所以，最模糊的放到最后，最具体的放到前面。

========================================
开启其他端口
----------------------------------------
# ############################### 开启其他端口
# 1.在httpd中开启8081端口，
 #Listen 12.34.56.78:80
 	Listen 80
 	Listen 8081
# 2.在 httpd-vhosts.conf 中配置文件夹信息
# 3.重启apache
# ##############################
NameVirtualHost *:8081
<VirtualHost *:8081>
    ServerAdmin JimmyMall@live.com
    DocumentRoot "F:/xampp/htdocs/main/8081/"
    ServerName localhost 
	ServerAlias localhost 
    ErrorLog "logs/localhost8081-error.log"
    CustomLog "logs/localhost8081-access.log" common
</VirtualHost>


========================================
apache反向代理语句网内其他电脑
----------------------------------------
<VirtualHost *:80>
	ServerAdmin **@**.com
    ServerName www.biomooc.com
    ProxyRequests Off
    ProxyPreserveHost On
        <Proxy *>
    Order Deny,Allow
    Allow from all      
    </Proxy>
    ProxyPass / http://192.168.1.103/
    ProxyPassReverse / http://192.168.1.103/
    ErrorLog "logs/biomooc-error.log"
    CustomLog "logs/biomooc-access.log" common 
</VirtualHost>



========================================
允许访问目录
----------------------------------------
1.修改apache配置，
apache\conf\extra\httpd-vhosts.conf 

<VirtualHost *:80>
	ServerName web.1116shop.com 
	DocumentRoot "F:/xampp/htdocs/1116/shop/"
	<Directory "F:/xampp/htdocs/1116/shop/">
		Options Indexes FollowSymLinks
		AllowOverride All 
		Order Deny, Allow 
		Allow from all 
	</Directory>
</VirtualHost>

2.重启apache服务。

3.添加hosts文件
C:\Windows\System32/drivers/etc/hosts
127.0.0.1 web.1116shop.com




========================================
windows下如何查看80端口被哪个服务占用了
----------------------------------------
假如我们需要确定谁占用了我们的80端口
在windows命令行窗口下执行：
>netstat -aon|findstr "80"
TCP     127.0.0.1:80         0.0.0.0:0               LISTENING       2448
看到了吗，端口被进程号为2448的进程占用，继续执行下面命令：
>tasklist|findstr "2448"
thread.exe                     2016 Console                 0     16,064 K
很清楚吧，thread占用了你的端口,Kill it
如果第二步查不到，那就开任务管理器，看哪个进程是2448，然后杀之即可。
如果需要查看其他端口。把 80 改掉即可



========================================
apache https配置详细步骤讲解
----------------------------------------
1. 修改conf/httpd.conf
取消ssl及proxy相关注释

#LoadModule ssl_module modules/mod_ssl.so （去掉前面的#号）
#Include conf/extra/httpd-ssl.conf （去掉前面的#号）
#LoadModule proxy_module modules/mod_proxy.so （去掉前面的#号）
#LoadModule proxy_http_module modules/mod_proxy_http.so （去掉前面的#号）








2. 生成证书
cmd进入命令行，进入apache安装目录的bin目录。
G:\xampp\apache\bin>

2.1 设置OPENSSL_CONFIG配置
执行命令：set OPENSSL_CONF=..\conf\openssl.cnf

2.2 生成服务端的key文件(生成服务器的私钥)
执行命令：openssl genrsa -out server.key 1024

## Generating RSA private key, 1024 bit long modulus
## ..........................++++++
## ...................++++++
## e is 65537 (0x10001)

完成后，会在bin目录下生成server.key文件，内容如下：
-----BEGIN RSA PRIVATE KEY-----
MIICXgIBAAKBgQDfzjaHDmGyj0C8nl0SMKO3P+SzCOlJCeUn7dYaC6duCQWKTLUe
nb9B/slICjp1jKlttZdzptJ3YtV2O3jVvThYVBzBhlAJQvg+4ySZgNEAM7Q3Orqc
P67T3zVMeVlenVX85jSQh+0tU0lze6r7bUpElGj5Jkez7H3+zXrPtJZQmwIDAQAB
AoGAV1c6oGpUZkLRmMqUt8yTl6gvsE8B+6cI7xQ6Qd/ab27F4rsc093sDe1Iz/xt
5AII/O+pM1EfQcgoVgPPnFpD6jnBOn5HMineq+8YrllHODnNQ6PtVX5meQ5KG+l6
yO6eICA67R4FM/zdr6vSWAsn5SLE4zaZBPXVYrOzRs3WPAECQQD2cq/yGAv4Gv7+
Dqs6yvwHaJlq6NHY5AYHLTp2vsce9lpo6Vhhy3AQzOYGFJ5NHrxcenni+6OwNQin
5gAZ76HBAkEA6Hrcp3/49SzyPpA7IECdvy2dKMXs4GLzwHUwzZtyziNFTGrgIxDS
x3l23PGw1EJuP1u9XcJ1djxiZb3dSSoRWwJBAOBwKdPsGlplG3v7l+z/Fu8YTz+R
sCo531OB2RBzRZvo9wU8HQVS5EgokgNPm6rYJuqBj6crTDMY2T0utUDpfwECQQC1
p3MNKtDUeudafYbFv9fDD5hSyL074/YE901IC2QcsLCwcn5qx/V7SmzXXb9HTBUr
SrrgLVdtKOfWChKD3ewrAkEA0WavdI10+AL6WTwuz5JHKzaXNSUfvBF4TrYWr4N8
0tPjbTd+rKYsNiEazMbkpKkl2rIX1K37Fe2outnlQN1UHw==
-----END RSA PRIVATE KEY-----


2.3 生成签署申请
执行命令：openssl req -new -out server.csr -key server.key

填写表格：
国家: cn
省份: guangzhou
城市: shenzhen
组织: biomooc
部门名字: english
Common Name(eg server PQDN or YOUR name)：ielts.dawneve.cc #需要和 httpd-ssl.con配置文件的 ServerName 保持一致
Email: poster469 at 163 dot com #可以留空
一个chanlenge password: ~!@#$%^&UYTREWQ
一个公司名:BioMooc

完成后，会在bin目录下生成server.csr文件，其中 Common Name <eg,YOUR name>[] 需要与配置文件中的ServerName一致，否则apache启动时将会报错。
文件内容如下:
-----BEGIN CERTIFICATE REQUEST-----
MIICDjCCAXcCAQAwgZUxCzAJBgNVBAYTAmNuMRIwEAYDVQQIDAlndWFuZ3pob3Ux
ETAPBgNVBAcMCHNoZW56aGVuMRAwDgYDVQQKDAdiaW9tb29jMRAwDgYDVQQLDAdl
bmdsaXNoMRkwFwYDVQQDDBBpZWx0cy5kYXduZXZlLmNjMSAwHgYJKoZIhvcNAQkB
FhFwb3N0ZXI0NjlAMTYzLmNvbTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA
3842hw5hso9AvJ5dEjCjtz/kswjpSQnlJ+3WGgunbgkFiky1Hp2/Qf7JSAo6dYyp
bbWXc6bSd2LVdjt41b04WFQcwYZQCUL4PuMkmYDRADO0Nzq6nD+u0981THlZXp1V
/OY0kIftLVNJc3uq+21KRJRo+SZHs+x9/s16z7SWUJsCAwEAAaA4MBYGCSqGSIb3
DQEJAjEJDAdCaW9Nb29jMB4GCSqGSIb3DQEJBzERDA9+IUAjJCVeJlVZVFJFV1Ew
DQYJKoZIhvcNAQELBQADgYEA2od/2pNLqbQ2sS69VO3jc+hXwf/3blR3Jhuf8+IK
9WtKQvCeWB1w0Z7HoZE4nIq9zlHfdasc2f8i0VMi9JDO7ZXN09WJUdCZD89DDiiX
q61kXnc+qxhh3e589uXBZhhn046Dm26t3JRFr0UqcfTF7cDjdbpfG5SQILwKYIq4
mc4=
-----END CERTIFICATE REQUEST-----



## 通过CA为网站服务器签署证书

2.4 生成CA的key文件(生成CA私钥)
执行命令：openssl genrsa -out ca.key 1024
## Generating RSA private key, 1024 bit long modulus
## ....++++++
## .............................................................++++++
## e is 65537 (0x10001)

完成后，会在目录bin下生成ca.key文件


2.5 生成CA自签署证书(利用CA的私钥产生CA的自签署证书)
执行命令：openssl req -new -x509 -days 365 -key ca.key -out ca.crt

完成后，会在目录bin下生成ca.crt文件，此处填写的信息与2.3步中类似。


2.6 生成CA的服务器签署证书
执行命令：openssl ca -in server.csr -out server.crt -cert ca.crt -keyfile ca.key

此处如果没有创建好相关目录，将会报如下错误：
Using configuration from ..\conf\openssl.cnf
I am unable to access the ./demoCA/newcerts directory
./demoCA/newcerts: No such file or directory

根据提示，手动创建相关目录：
在bin下新建demoCA文件夹
bin/demoCA

在demoCA下新建index.txt
bin/demoCA/index.txt

在demoCA下新建serial.txt，其内容为01,重命名-删除.txt后缀
bin/demoCA/serial

在demoCA下新建newcert文件夹
bin/demoCA/newcerts/

完成后，再执行刚才失败的命令，会在bin目录下生成server.crt文件。
G:\xampp\apache\bin>openssl ca -in server.csr -out server.crt -cert ca.crt -keyfile ca.key
Using configuration from ..\conf\openssl.cnf
Check that the request matches the signature
Signature ok
Certificate Details:
        Serial Number: 1 (0x1)
        Validity
            Not Before: Oct 20 08:29:47 2019 GMT
            Not After : Oct 19 08:29:47 2020 GMT
        Subject:
            countryName               = cn
            stateOrProvinceName       = guangzhou
            organizationName          = biomooc
            organizationalUnitName    = english
            commonName                = ielts.dawneve.cc
            emailAddress              = **@**.com
        X509v3 extensions:
            X509v3 Basic Constraints:
                CA:FALSE
            Netscape Comment:
                OpenSSL Generated Certificate
            X509v3 Subject Key Identifier:
                96:42:DA:9D:E5:C7:7A:7D:3B:1C:B6:37:B0:40:34:F8:7D:75:70:64
            X509v3 Authority Key Identifier:
                keyid:E6:B8:F7:8C:F7:FB:02:E8:95:28:03:3E:AB:2E:AD:CA:6D:87:37:19

Certificate is to be certified until Oct 19 08:29:47 2020 GMT (365 days)
Sign the certificate? [y/n]:y


1 out of 1 certificate requests certified, commit? [y/n]y
Write out database with 1 new entries
Data Base Updated


demoCA目录的最终结构如下：
\apache\bin\demoCA
|--newcerts #手动创建
|--index.txt #手动创建

|--index.txt.attr #自动生成
|--index.txt.old #自动生成

|--serial #手动创建
|--serial.old #自动生成









3. 修改conf/extra/httpd-ssl.conf文件

3.1 修改https端口号
根据需要修改httpd-ssl.conf的默认端口号"443"，这里将所有的443修改为"6443"，同时修改ServerName。

具体如下：
Listen 6443
<VirtualHost _default_:6443>
DocumentRoot "G:/xampp/htdocs/IELTS/" #改为合适的文件夹
ServerName ielts.dawneve.cc:443
提示：此处如果保持https默认的443端口，则访问的时候，无需再加端口号。(我都保留443没动)




3.2 修改相关证书路径
在apache安装目录的conf目录下，新建一个key目录，名称随意，然后将bin目录中的相关证书复制到key目录中。key目录最终的文件结构如下：
conf/ielts.key/
|--.rnd
|--ca.crt
|--ca.key
|--server.crt
|--server.csr
|--server.key



接着修改conf/extra/httpd-ssl.conf文件中的如下内容：
SSLCertificateFile "conf/ielts.key/server.crt"
SSLCertificateKeyFile "conf/ielts.key/server.key"
SSLCACertificateFile "conf/ielts.key/ca.crt"

#SSLVerifyClient require （去掉前面的#号，进行客户端验证时需要）
#SSLVerifyDepth 1 （去掉前面的#号，把10改为1，进行客户端验证时需要)







4. 重启apache

在浏览器中，输入https://ielts.dawneve.cc:443，如果页面出现提示 It works! ，则说明https配置成功了。如图：
没有效果，继续做下一步。







5. 项目部署方式

修改conf/extra/httpd-vhosts.conf，新增内容如下：
NameVirtualHost *:443
注意：
httpd-vhosts.conf配置文件中原有的NameVirtualHost *:80不要修改，下面新增一行即可。

NameVirtualHost *:443



5.1 以https的方式部署项目

在 conf/extra/httpd-vhosts.conf 配置文件中，新增如下内容：
<VirtualHost *:443>
	ServerName ielts.dawneve.cc
	DocumentRoot G:/xampp/htdocs/IELTS/
	SSLEngine on
	SSLProxyEngine on
	SSLCertificateFile "G:/xampp/apache/conf/ielts.key/server.crt"
	#SSLCertificateFile "D:/myplatform/Apache2.2/conf/key/server.crt"
	SSLCertificateKeyFile "G:/xampp/apache/conf/ielts.key/server.key"
	#SSLCertificateKeyFile "D:/myplatform/Apache2.2/conf/key/server.key"
	<Directory "/">
		Options None
		AllowOverride All
		Order allow,deny
		Allow From All
	</Directory>
</VirtualHost>
上面的配置含义是，在浏览器中输入https://ielts.dawneve.cc:443，即可访问DocumentRoot对应目录下的项目。




//到这里已经可以使用https请求了。虽然chrome提示不安全。
//后面没继续做






refer:
https://www.jb51.net/article/23971.htm
https://blog.csdn.net/qq_35128576/article/details/81326524


========================================
|-- 以反向代理的方式部署项目
----------------------------------------

5.2.1 以二级目录的方式部署反向代理
此时，被代理的虚拟机，必须要设置别名，否则，首页之外的其它url，将无法实现代理。
在conf/extra/httpd-vhosts.conf配置文件中，新增如下内容：

#部署被代理的虚拟机local.bms
<VirtualHost *:80>
	ServerName local.bms
	DocumentRoot "D:/javapro/bms"
	Alias /bms "D:/javapro/bms"
	<Directory "/">
		Options None
		AllowOverride All
		Order allow,deny
		Allow From All
	</Directory>
</VirtualHost>

此处，增加了Alias别名配置，以便通过http://local.bms/bms可以访问到http://local.bms，为后面的反向代理做准备。
#部署反向代理虚拟机
<VirtualHost *:6443>
	ServerName localhost
	SSLEngine on
	SSLProxyEngine on
	SSLCertificateFile "D:/myplatform/Apache2.2/conf/key/server.crt"
	SSLCertificateKeyFile "D:/myplatform/Apache2.2/conf/key/server.key"
	ProxyRequests Off
	<Proxy *>
		Order allow,deny
		Allow from all
	</Proxy>
	ProxyPass /bms http://local.bms/bms
	ProxyPassReverse /bms http://local.bms/bms
</VirtualHost>



上面的配置含义是，将https://localhost:6443/bms的请求，映射到http://local.bms/bms，其中，url结尾处的bms，就相当于一个虚拟的二级目录。
注意：此处被代理的url结尾处，不要加斜杠"/"。




5.2.2 以一级目录的方式部署反向代理
此时，被代理的虚拟机，无需设置别名。
在conf/extra/httpd-vhosts.conf配置文件中，新增如下内容：
#部署被代理的虚拟机local.bms

<VirtualHost *:80>
	ServerName local.bms
	DocumentRoot "D:/javapro/bms"
	<Directory "/">
		Options None
		AllowOverride All
		Order allow,deny
		Allow From All
	</Directory>
</VirtualHost>


#部署反向代理虚拟机
<VirtualHost *:6443>
	ServerName localhost
	SSLEngine on
	SSLProxyEngine on
	SSLCertificateFile "D:/myplatform/Apache2.2/conf/key/server.crt"
	SSLCertificateKeyFile "D:/myplatform/Apache2.2/conf/key/server.key"
	ProxyRequests Off
	<Proxy *>
		Order allow,deny
		Allow from all
	</Proxy>
	ProxyPass / http://local.bms/
	ProxyPassReverse / http://local.bms/
</VirtualHost>
上面的配置含义是，将https://localhost:6443的请求，映射到http://local.bms

注意：此处被代理的url结尾处，必须要加斜杠"/"。





========================================
----------------------------------------



========================================
----------------------------------------



========================================
----------------------------------------
