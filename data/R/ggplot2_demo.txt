ggplot2 精选案例赏析

常用图
精美图

探索性图


专题：ggplot2画paper中常见的图
https://tool.biomooc.com/R_scripts/



========================================
********** 数据源 **********
----------------------------------------




========================================
R 包内置数据: R包名及数据示例、用途
----------------------------------------
1. datasets包内置数据

(1) 查看全部数据集
library(help = "datasets")

(2) 常用的数据集:
mtcars
iris 





2. ggplot2 内置的数据 

library(help = "ggplot2")

(1) 钻石数据集 
> dim(diamonds) #[1] 53940    10
> head(diamonds)
# A tibble: 6 x 10
  carat cut       color clarity depth table price     x     y     z
  <dbl> <ord>     <ord> <ord>   <dbl> <dbl> <int> <dbl> <dbl> <dbl>
1 0.23  Ideal     E     SI2      61.5    55   326  3.95  3.98  2.43
2 0.21  Premium   E     SI1      59.8    61   326  3.89  3.84  2.31
3 0.23  Good      E     VS1      56.9    65   327  4.05  4.07  2.31







3. 其他R包内置数据

(1).R的MASS包中的biopsy数据集
该数据集包含了9个与乳腺癌相关的指标和分类（良性benign和恶性malignant）。
可用于作Logisitic回归。

> library(MASS)
> dim(biopsy) #699  11
> head(biopsy)
       ID V1 V2 V3 V4 V5 V6 V7 V8 V9     class
1 1000025  5  1  1  1  2  1  3  1  1    benign
2 1002945  5  4  4  5  7 10  3  2  1    benign










========================================
********** 应用篇 **********
----------------------------------------

精美效果欣赏:
1. 美团弧形漏斗图
https://zhuanlan.zhihu.com/p/29126173


2. 精细制作Economist上的图
https://zhuanlan.zhihu.com/p/37595732


3. 分面的标签怎么移动位置和旋转？
https://github.com/tidyverse/ggplot2/issues/3888











========================================
ggplot2 画小提琴图、boxplot画到violin中间
----------------------------------------
1.数据是scRNAseq结果，一列是cluster分类，第二列是基因名字，第三列是表达量。
想比较不同类的细胞，某个基因的表达量的差异。

> head(df) #5万行， 3列
     seurat_clusters variable     value
1480               2    PTPRC 0.0000000
1483               2    PTPRC 0.3043327

> table(df$seurat_clusters)
     1      2      3      4 
152076 141873 122417 115729 

> table(df$variable)
    CCR7     CD34     CD3D      CD4     CD68    CD79A     CD8A   COL1A1    CSF1R    CSF3R    EPCAM     FPR1 
   28005    28005    28005    28005    28005    28005    28005    28005    28005    28005    28005    28005 
    GZMA      LYZ    MS4A1    PTPRC   S100A9 TNFRSF17   TPSAB1 
   28005    28005    28005    28005    28005    28005    28005
#






2.画小提琴图
(1). 正常坐标系，x轴为基因，y轴为cluster，每个方格为竖着的小提琴图。设置描边为白色。
pdf(paste0(sampleoutpath,"Vlnplot_",sample,"_celltype.pdf"),width = 8,height = 20)

df$seurat_clusters=as.factor(df$seurat_clusters) #一定要注意，分类变量需要时因子！坑！！
p <- ggplot(df,aes(x=variable,y=value,fill=variable))+
  geom_violin(scale = "width",colour="white") + #小提琴图，边框颜色白色，fill属性为填充颜色
  facet_wrap(seurat_clusters~ . ,strip.position = "left",ncol = 1) + #分面，多行
  theme_bw() + #白主题
  theme(panel.grid = element_blank(), #不要背景
        axis.ticks.y=element_blank(), #不要y坐标刻度
        
        axis.text.x = element_text(angle=45,vjust=1,hjust = 1), #x文字倾斜45度
        axis.text.y = element_blank(), #不要y轴文字
        
        legend.position = "none", #不要图例
        
        panel.spacing=unit(0,"cm"), #分面间距为0
        
        strip.text.y = element_text(angle = 180),
        strip.background = element_blank()) 
print(p)
dev.off()



(2).转换xy轴后(ggplot3.2.0, 在3.1.0上没有出现预期效果，后来发现，是因为分类变量不是因子！大坑。)
pdf(paste0(sampleoutpath,"Vlnplot_",sample,"_celltype.pdf"),width = 8,height = 20)

# 旋转小提琴图
head(df)
df$seurat_clusters=as.factor(df$seurat_clusters) #一定要注意，分类变量需要时因子！坑！！

str(df)

p2 = ggplot(df,aes(x=seurat_clusters,y=value,fill=variable))+
  geom_violin(scale = "width",colour="white",alpha=0.85,width=1) +
  coord_flip() + #guides(fill=FALSE)
  facet_wrap(variable~.,nrow = 1, strip.position = "bottom") + 
  theme_bw() +
  theme(
        panel.grid = element_blank(), #不要背景网格
        axis.text.x = element_blank(), #不要x坐标轴刻度文字
		
        axis.text.y = element_text(size=15), #y坐标刻度字号
        axis.title.y = element_text(size=15), #y标题字号
        
        legend.position = "none", #不要图例
        panel.spacing=unit(0,"cm"), #分面的间距
    
        strip.placement = "outside", #分面标签位置
        strip.text.x = element_text(angle=90,vjust=1,hjust = 1,size=15), #分面标签 文字倾斜; 字号
        strip.background = element_blank() #分面标签 不要背景
    )
print(p2)
dev.off()




3. 如何把boxplot画到violin中间呢？
ref:https://blog.csdn.net/zhouhucheng00/article/details/86082760
head(cellInfo)
# 		geneNumber  countsPerCell  countsPerGene  cellType  cellCycle  cellType2  cellPDAU
#  		<int>	<int>	<dbl>		<chr>		<fct>	<chr>		<dbl>
# c01ROW24	5693	1950601	342.6315	HeLa_sync	G2M	HeLa_syncMix	66.89049
# c01ROW35	6768	3048970	450.4979	HeLa_sync	M	HeLa_syncMix	68.60782
# c01ROW31	6542	2783703	425.5125	HeLa_sync	S	HeLa_syncMix	66.15095

library(RColorBrewer)
cols=RColorBrewer::brewer.pal(n = 5,name = "Set2");
cols=rev(col)
#barplot(1:5,col=col)

ggplot(cellInfo, aes(  substr(cellInfo$cellType,1,3), cellPDAU, fill=cellCycle) )+
    geom_violin(trim=FALSE,color="white")+ #小提琴有填充色
    geom_boxplot(width=0.1, position=position_dodge(0.9))+ #重叠画一个箱线图
    scale_fill_manual('Cycle',values=cols)+ #自定义填充颜色
    theme_bw()+ #浅色主题
    scale_x_discrete( labels = c('BC', 'HeLa'))+ #定义x坐标标签
    labs(x="Cell Type", y="Mean cell DPAU") #坐标轴标题
#






# 附录
#### hjust和vjust做了什么？
(资料来源：ggplot2，Hadley Wickham，第196页)

hjust 控制水平对齐和 vjust 控制垂直对齐。
取值[0,1]之间, 0表示左对齐, <1>表示右对齐

大多数情况下，您可以在此范围之外使用它，但不要指望它以任何特定方式运行）。








========================================
ggplot2 画饼图，及原生函数pie，主题(theme)和图例(legend)设置
----------------------------------------


1.原生画图函数pie 画饼图
########### 画饼图
#数据
x=c(40,20,3,26,10,45)
x2=c('z1','d2','n3','b4','a5','c6')
x3=paste0(x2, "(",x,', ',round(x/sum(x)*100,2),"%)" );x3
x4=(paste0(x, "\n",round(x/sum(x)*100,2),"%" ) );x4
###################
# 原生R函数 画饼图
pie(x)
pie(x,labels=x3) #加上百分比

pie(x,labels=x3,edges = 20) #最外圈的多边形的边的个数(默认200)
pie(x,labels=x3,radius = 0.5) #圈是画在一个正方形内的[0,1](默认0.8)

pie(x,labels=x3,clockwise=T) #顺时针开始画

#lty : 每个扇区的线型（0：无，1：实线；2：短划线；3：点线；4：点划线；5：长划线；6：双划线;）
pie(x,labels=x3,clockwise=T, lty =0)
pie(x,labels=x3,clockwise=T, lty =0:5)

#border : 每个扇区的边框颜色。
pie(x,labels=x3,clockwise=T, border ="red")
pie(x,labels=x3,clockwise=T, border =c(1:6))


#自定义颜色
library(RColorBrewer)
#brewer.pal.info # 查看有哪些调色板
col6=RColorBrewer::brewer.pal(n = 6,name = "Set2")
barplot(c(1:6),col=col6) #预览颜色
#
pie(x,labels=x3,clockwise=T, col=col6)  


#想要图例横着排序，只能提前对图例排序
# https://stackoverflow.com/questions/39552682/base-r-horizontal-legend-with-multiple-rows/39552713
Nfact = 6
Nrows = 2
Ncols = ceiling(Nfact / Nrows)
MyOrder = matrix(1:(Nrows*Ncols), nrow=Nrows, ncol=Ncols, byrow=T)


#fig1
pie(x, #数据
    labels=x4, #标签
    clockwise=T, #顺时针方向
    col=col6, #扇形颜色
    main="Pie Plot of XX",
    lty=0) #扇形描边，去掉
#legend(x=-1,y=-1.2, #"right", #图例位置
legend("bottom", 
       inset=-0.2, #图例为关键词时，inset = 分数 设置其相对位置(-向下，+向上)
       legend=x2[MyOrder], #图例文字
       fill=col6[MyOrder], #图例填充颜色
       
       #box.lty=1, #图例最外大方框
       bty="n", #不要图例边框
       
       #title.adj=0, #图例标题的相对位置，0.5为默认，在中间。0最左，1为最右。
       #title="Type",#图例标题
       
       cex=1, #字体大小倍数
       #horiz = T,#横着显示，会覆盖掉ncol
       ncol=3, #图例显示为n列
       #byrow=T, #??
       
       xpd=T, #有这句话才能显示在图外
       x.intersp=0.5, #图例中文字离图片的水平距离
       #y.intersp=1, #图例中文字离图片的垂直距离
       
       text.width=0.3, #两个图例之间的距离
       #merge = TRUE,
       #title="Type", #图例标题
       border=NA #不要图例小方块描边
)
#














2. 使用 ggplot2 做饼图
大坑：如果想要画的图顺序混乱，多半是因为分类变量必须是因子，而自动转换得到的因子不是期望的顺序。需要手工转换因子，以便保证因子的顺序。

###################
## 使用ggplot2包 画饼图
df=data.frame(
  count=x, #计数
  type=x2, #右侧图例的颜色
  #tag=x3, #饼图上的图注
  tag=x4
)
head(df)

# 去掉背景
library(ggplot2)
blank_theme <- theme_minimal()+
  theme(
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    axis.text.x = element_blank(),
    axis.text.y = element_blank(),
    panel.border = element_blank(),
    panel.grid=element_blank(),
    axis.ticks = element_blank(),
    plot.title=element_text(size=14, face="bold",
                            hjust = 0.5)#大图标题居中
  )

library(ggrepel) #geom_text_repel 比 geom_text新增功能：防止文字遮挡，自动连线点和标签
ggPie=function(df2){
  #df=df2
  g=ggplot(df2, mapping=aes(x="", y=count,fill=type))+
    geom_bar(stat="identity",width=0.5)+
    #coord_polar("y", start=0)+ #0度角起始角度
    coord_polar(theta = 'y', direction = -1)+ #direction设置方向
    #scale_fill_manual(values=col6)
    scale_fill_brewer(palette="Dark2")+
    blank_theme+
    theme(legend.position="bottom", #图例显示位置
          
          legend.margin=margin(t = -1.5, unit='line'), #图例整体上边距,缩减n行
          
          legend.spacing.x = unit(2, 'pt'), #图例之间的x距离
          legend.spacing.y = unit(2,"pt"), #图例之间的y距离
          
          #plot.margin=unit(c(1,0,1,0),"lines"), #图形外围边框top,right,bottom,left
          
          
          legend.box = "horizontal", #多图排列方式 'horizontal', 'vertical'
          #legend.direction="horizontal", #图例排列方向 'horizontal', 'vertical'
          #legend.title.align = 0.5, #？
          #legend.key = element_rect(color = NA, fill = NA), #图例每个方块的边框
          #legend.key = element_rect(size = 1,color = 'yellow' ),
          
          #legend.key.size = unit(0.2, "cm"), #图例方块大小
          legend.key.height=unit(1,"line"), #图例方块的高度
          legend.key.width=unit(0.5,"line"), #图例方块的宽度度
          
          #标签right距离，left距离
          legend.text = element_text(margin = margin(r = 20, l=2,t = -3, unit = "pt")), 
          #legend.text = element_text(margin = margin(t = -5,unit='pt')), #图例文字上移-n,或下移n
          
          
          
          legend.background = element_blank() )+  #去掉图例背景
    #guides(fill = guide_legend(title = NULL))+ #去掉图例标题
    guides(fill = guide_legend(ncol = 3, #图例几列
                               inset=-0.5,
                               byrow=T))+ #图例横着排？默认竖着排
    labs(title="Pie plot (ggplot2)",  #设置大图标题
         #subtitle ="subtitles here, pie from count data.",
         x="",y="")+
    geom_text_repel(stat="identity",aes(x=1.2,y=x, label = tag), size=4, #饼图上的文字
              position=position_stack(vjust = 0.5));g
  #geom_text(stat="identity",aes(y=x, label = scales::percent(x/100)), 
  #          size=4, position=position_stack(vjust = 0.5))
  return(g)
}

#1 ggplot2 图例距离怎么调?
# https://stackoverflow.com/questions/11366964/is-there-a-way-to-change-the-spacing-between-legend-items-in-ggplot2
#2 ggplot2 主题（theme）设置 
# http://www.sohu.com/a/224303554_466874
# https://www.sohu.com/a/135157372_572440
# https://stackoverflow.com/questions/17073772/ggplot2-legend-on-top-and-margin

#分类变量一定要是因子才行，否则顺序是分类变量的ascii码顺序，不一定符合预期
print(ggPie(df) )

#指定因子顺序
df_2=df
df_2$type=factor(df_2$type, levels=c('z1', 'd2', 'n3', 'b4', 'a5', 'c6'))
print( ggPie(df_2) ) #fig2




#ggpubr包的ggpie（）
#用ggpar()修改图形
p4 <- ggpar(p3, title = 'Number of cars in different Cylinders',#设置标题
      legend = 'right', #设置图例位置
      orientation = 'reverse')#反转绘图的方向为逆时针方向。
p4

ref:
ref:
https://blog.csdn.net/wangjunliang/article/details/135154525 我整理的
https://blog.csdn.net/qq_52529296/article/details/132239782

http://www.sthda.com/english/wiki/ggplot2-pie-chart-quick-start-guide-r-software-and-data-visualization
https://www.cnblogs.com/ljhdo/p/4514106.html
https://www.jianshu.com/p/3c1b824dfd84






========================================
R语言ggplot2绘图教程——DAVID做基因富集分析（GO(BP, CC, MF)、KEGG）及可视化
----------------------------------------
1.概念
BP(Biological Process，生物学过程，比如参与了细胞免疫，凋亡，细胞增殖等等)，
CC（cellular component，所处细胞中的位置，比如蛋白在细胞膜、线粒体中还是在核内等），
MF（Molecular Function，分子功能，比如是个什么酶，还是个载体蛋白什么的）


目前市场上有很多做富集分析的软件。
GOstat，onto-tool，GOEAST，wego，GSEA，DAVID等。

富集分析概念佶屈聱牙，十分晦涩难懂。其实通俗的来讲就是看看我们要感兴趣的东西在我们要研究的集合中多不多。



2.获取数据集
(1)对比肿瘤和瘤旁，得到差异表达基因列表
或者获得高变基因列表
(2)使用DAVID服务器获取GO分析的信息:Term	Count	percentage	log(P)	type
https://david-d.ncifcrf.gov/tools.jsp


3.使用R的ggplot2可视化

#从DAVID上复制如下信息：
#Term	Count	percentage	log(P)	type
#cell cycle	18	28.6	6.443697499	BP
#cell cycle phase	14	22.2	6.443697499	BP
#condensed chromosome	7	11.1	2.920818754	CC
#chromosome	10	15.9	2.508638306	CC

#读取剪切板
tmp=read.table("clipboard", sep="\t",header = T)
head(tmp)
dim(tmp) #35 5

library("dplyr")
#tmp2=tmp[order( tmp$log.P., tmp$Term),]
#tmp2=tmp %>% group_by(type) %>% arrange(log.P.) 
#tmp2=tmp %>% group_by(type, (log.P.) ) 
tmp2=tmp

library("ggplot2")
p <- ggplot(data=tmp2, aes(x=Term, y=log.P., fill=type) ) +
  geom_bar(stat="identity", width=0.8) + 
  coord_flip() +  #反转x和y坐标轴
  #scale_fill_manual(values = CPCOLS) + #theme_bw() + 
  scale_x_discrete(limits=rev(tmp2$Term) ) + #限定x坐标的顺序
  xlab("") + ylab("-log(adj.P.value)")+
  theme(axis.text=element_text(face = "bold", color="gray50")) +
  labs(title = "Significant Enriched GO Terms")
p

#

##############################
#待优化颜色图例的版本
##############################
#复制的excel数据需要有type(BP,CC,MF,KEGG), term, logP列
go=read.table("clipboard",header=T,sep="\t")
dim(go) #11 9
go[1:3,1:4]

#
library('ggplot2')
plotGO=function(tmp2, txt=""){
  p <- ggplot(data=tmp2, aes(x=term, y=logP, fill=type) ) +
    geom_bar(stat="identity", width=0.8) + 
    coord_flip() +  #反转x和y坐标轴
    #scale_fill_manual(values = CPCOLS) + #theme_bw() + 
    scale_x_discrete(limits=rev(tmp2$term) ) + #限定x坐标的顺序
    xlab("") + ylab("-log(q Value)")+
    theme(axis.text=element_text(face = "bold", color="gray50")) +
    #labs(title = paste0("Significant Enriched GO and KEGG Terms ",txt))
    labs(title = paste0("Significant Terms ",txt))
  p
}

library("dplyr")
tmp=go
# if Metascape data:
#tmp$type=tmp$Category
#tmp$term=paste0("(",go$GO,")",go$Description)
#
tmp2=tmp[order(tmp$type, -tmp$logP),] #排序
#tmp2=tmp %>% group_by(type) %>% arrange(-logP) 
#tmp2=tmp %>% group_by(type, (logP) ) 
#tmp2=tmp

plotGO(tmp2,"(Right 5% Genes)")
##




========================================
R语言ggplot2绘图教程——差异表达基因火山图
----------------------------------------

1.实例1
#http://agetouch.blog.163.com/blog/static/22853509020161194123526/
#  Using ggplot2 for volcano plots 使用ggplot2画火山图
library(ggplot2)

#读取数据 #data download from GEO2R result
setwd("C:\\Users\\Administrator\\Desktop")
dif=read.table(file="Primary Tumor_Normal Colon.txt",header=T,row.names=1)
dif[1:3,1:4]

#添加显著与否标签
no_of_genes=nrow(dif);no_of_genes #4653
dif$threshold = as.factor(abs(dif$logFC) > 2 & dif$P.Value < 0.05/no_of_genes)

##如果是 limma 包的结果，会有 adj.P.Val，直接使用这个调整后的p value和0.05比较即可，不用再除以基因个数。


#画火山图
g = ggplot(data=dif, aes(x=logFC, y=-log10(P.Value), colour=threshold)) +
  geom_point(alpha=0.4, size=1.75) +
  #opts(legend.position = "none") + 
  theme(legend.title=element_blank()) +
  scale_colour_hue(labels=c("Not sig.","Sig."))+
  #xlim(c(-10, 10)) + ylim(c(0, 15)) +
  xlab("log2[fold change]") + ylab("-log10[p-value]") +
  labs(title="Volcano plot")
g

#只标注显著基因的基因名
# 选出一部分基因：FC大且p小的基因
dd_text = dif[(abs(dif$logFC) > 2) & (dif$P.Value < 0.05/no_of_genes),]
head(dd_text)

#添加文字-基因名
g + geom_text(data=dd_text, aes(x=logFC, y=-log10(P.Value), label=dd_text$Gene.symbol), colour="black")






#添加文字-基因名：防遮挡，淡色，字体大小优化
#install.packages("ggrepel") #https://blog.csdn.net/woodcorpse/article/details/78955334
library(ggrepel)
g + geom_text(data=dd_text, aes(x=logFC, y=-log10(q.value), label=dd_text$id), alpha=0.3,
              colour="black",size=3)+ylim(0,20)
#
g+geom_text_repel(data=dd_text, aes(x=logFC, y=-log10(q.value), label=dd_text$id), alpha=0.3,
                  colour="black",size=3)+ylim(0,20)
#




#保存图片
ggsave("volcano.png")
ggsave("volcano8.png",g,width=8,height=8)











========================================
|-- DESeq2做差异分析，并画火山图
----------------------------------------

##########################
# 1 get DE gene list, with DESeq2
##########################
library(DESeq2)

# matrix
countData <- cbind( RNA[,cid.norm], RNA[,cid.sync] )
dim(countData) #14675    56
countData[1:4,1:4]
#过滤掉5个细胞以下表达的基因
df=data.frame(
  gene=row.names(countData),
  num.N=apply(countData[, cid.norm]>0,1,sum),
  num.S=apply(countData[, cid.sync]>0,1,sum),
  row.names = 1
)
head(df)
df2=df[which(df$num.N>5 & df$num.S>5),]
dim(df2) #7487 2
#
countData=countData[rownames(df2),]
dim(countData) #[1] 7487   56

#条件
condition <- factor(c( rep('normal', length(cid.norm)), rep('sync', length(cid.sync))  ), 
                    levels=c('normal','sync'))
condition
#
dds <- DESeqDataSetFromMatrix(countData, DataFrame(condition), design= ~ condition )
# 过滤
nrow(dds) #7487
dds2 <- dds[ rowSums(counts(dds)) > 1, ]
nrow(dds2)#[1] 7487

keyword='sync_VS_normal_HeLa'
#
#一步法
dds3 <- DESeq(dds2) #耗时1min
## estimating size factors
## estimating dispersions
## gene-wise dispersion estimates
## mean-dispersion relationship
## final dispersion estimates
## fitting model and testing
## -- replacing outliers and refitting for 5164 genes
## -- DESeq argument 'minReplicatesForReplace' = 7 
## -- original counts are preserved in counts(dds)
## estimating dispersions
## fitting model and testin

#获取结果
res <- results(dds3)
head(res)
#log2 fold change (MLE): condition sync vs normal 
#Wald test p-value: condition sync vs normal 
#DataFrame with 6 rows and 6 columns
#baseMean     log2FoldChange             lfcSE               stat             pvalue
#<numeric>          <numeric>         <numeric>          <numeric>          <numeric>
#  AAAS  45.0706763507379 -0.286189288744119 0.984181112955205 -0.290789251060485  0.771212506698282
#AAGAB 37.6621410990222  0.761637086304566   1.1243489415785  0.677402768961818  0.498150441980007

#                   padj
#              <numeric>
# AAAS  0.941981213557402
#AAGAB 0.849654084021838

# 校正后p-value为NA的赋值为1
res$padj[is.na(res$padj)] = 1

# order
res <- res[order(res$padj),]
dim(res) #7487 6

# set cutoff
resSig <- subset(res, abs(log2FoldChange)>log2(2) & padj < 0.05)
dim(resSig) #[1] 252  6
head(resSig)

#save to file
resSig<-data.frame(resSig)
dim(resSig) #[1] 252   6
head(resSig)
write.csv(resSig, file=paste0("DESeq2_DEG_",keyword,".csv") )


#save all file for GSEA
res2=data.frame(res)
dim(res2) #7487 6
head(res2)
write.csv(res2, file=paste0("DESeq2_ALL_",keyword,".csv") )




##########################
# 2 volcano plot
##########################
library('ggplot2')
dif=data.frame(res)
dif$threshold= factor( abs(dif$log2FoldChange) > log2(1.5) & dif$padj < 0.05, #1.5倍, 0.05
                       levels=c(TRUE,FALSE) )
str(dif)
head(dif)
tb=table(dif$threshold);tb
#TRUE FALSE 
#304  7235

#
dif$threshold2="ns";
dif[which(dif$log2FoldChange > log2(1.5) & dif$padj < 0.05),]$threshold2="up";
dif[which(dif$log2FoldChange < (-log2(1.5)) & dif$padj < 0.05),]$threshold2="down";
dif$threshold2=factor(dif$threshold2, levels=c('down','ns','up'))
tb2=table(dif$threshold2);tb2
#down   ns   up 
#130 7183  174

# save up and down gene list
geneUp=row.names(dif[which(dif$threshold2=='up'),]);length(geneUp) #174
head(geneUp)
writeLines(geneUp, paste0('DESeq2_', keyword,'_genes_UP.txt') )
#
geneDown=row.names(dif[which(dif$threshold2=='down'),]);length(geneDown) #130
head(geneDown)
writeLines(geneDown, paste0('DESeq2_', keyword,'_genes_DOWN.txt') )

##############
g = ggplot(data=dif, aes(x=log2FoldChange, y=-log10(padj), color=threshold2)) +
  geom_point(alpha=0.4, size=0.4) +
  theme_bw() +
  theme(legend.box = "horizontal", #显著性图例，水平，标到底部
        legend.position="bottom") +
  #scale_color_manual('Significant',labels=c("TRUE","FALSE"), values=c("red", "grey") )+ 
  scale_color_manual('Significant',labels=c(paste0("down(",tb2[[1]],')'),'ns',
                                            paste0("up(",tb2[[3]],')' )),
                     values=c("blue", "grey",'red') )+
  xlab("log2(FoldChange)") + ylab("-log10(p.adj)") +
  labs(title= paste0("DEG: ",keyword) ); g
# add text to a few genes
dd_text = dif[ ((abs(dif$log2FoldChange) > 2) & (dif$padj < 1e-10) ) | 
                 abs(dif$log2FoldChange) > 5.5,]; dim(dd_text)
head(dd_text)
#add text
library(ggrepel)
g2=g + geom_text_repel(data=dd_text, aes(x=log2FoldChange, y=-log10(padj), label=row.names(dd_text)), 
                       size=2.5, colour="black",alpha=0.6); g2
#保存图片
CairoPDF(file=paste0('volcano_plot_',keyword,'.pdf'), width=3.6,height=4)
print(g2)
dev.off()
#

##########################
# 3 check the counts; 用原始counts还是用标准化过后的呢？
##########################
showCounts=function(gene1){
  print(gene1)
  c0=as.numeric(RNA[gene1,cid.norm]);
  c1=as.numeric(RNA[gene1,cid.sync]);
  deltaCV=sd(c1)/mean(c1)-sd(c0)/mean(c0)
  df=data.frame(
    counts=c(c0,c1),
    type=c(rep('normal', length(c0)),   rep('sync', length(c1)) )
  )
  #library(ggplot2)
  g=ggplot(df, aes(type,log10(counts+1),color=type))+
    theme_bw()+
    geom_boxplot()+geom_jitter(size=0.5, alpha=1)+
    scale_color_manual(values=c('grey','#93BBFD'))+
    labs(title=gene1,x=paste0("deltaCV:",round(deltaCV,2) ) , y="log10(RNAcounts+1)")
  g
}
dd_text=dd_text[order(-dd_text$log2FoldChange),]
head(dd_text)
dim(dd_text) #21
geneUp2=rownames(dd_text[which(dd_text$log2FoldChange>0),] );length(geneUp2) #13
geneDown2=rownames(dd_text[which(dd_text$log2FoldChange<0),] );length(geneDown2) #8
#
CairoPDF(file=paste0("02-Check_counts_", keyword,".pdf"),width=7,height=5)
grid.arrange(
  showCounts(geneUp2[1]),
  showCounts(geneUp2[2]),
  showCounts(geneUp2[13]),
  
  showCounts(geneDown2[1]),
  showCounts(geneDown2[7]),
  showCounts(geneDown2[8]),
  nrow=2
)
dev.off()


















========================================
|-- MA plot 查看显著基因的均值和倍数变化: logFC ~ avg(exp)
----------------------------------------


数据是单样本 edgeR 差异分析结果:
> head(deg.G1_S)
              logFC       logCPM       PValue      p.adj  sig
A1BG     -7.6691624 -0.043860860 0.0004096598 0.03643946 down
A1BG-AS1 -0.2576744  4.224995204 0.7627912593 1.00000000   ns



# ma plot
library(ggplot2)
library(ggrepel)
# legend
tb2=table(deg.G1_S$sig);tb2

# text
deg.G1_S.text=deg.G1_S[which(deg.G1_S$logCPM>2 & abs(deg.G1_S$logFC)>log2(3.5) ),]; dim(deg.G1_S.text)
deg.G1_S.text$gene=rownames(deg.G1_S.text)
# plot
ggplot(deg.G1_S, aes(logCPM, logFC))+
  geom_point(size=0.5, aes(color=sig))+
  geom_hline(yintercept = c(log2(2), -log2(2)), linetype=2, color="red" )+
  geom_text_repel(data=deg.G1_S.text, aes(logCPM, logFC, label=gene, color=sig))+
  theme_bw()+
  scale_color_manual('Change',labels=c(paste0("down(",tb2[[1]],')'),'ns',
                                            paste0("up(",tb2[[3]],')' )),
                     values=c("blue", "grey",'red') )+
  guides(color = guide_legend(override.aes = list(alpha = 1,size=3)))+
  labs(title="MCF7 RNA-seq, single sample: G1 vsS", 
       x="Average of normalized counts(logCPM)",
       y="Log fold change")
# 效果图: https://zhuanlan.zhihu.com/p/477404097











========================================
TCGA数据做基因共表达散点图 with r And p value 
----------------------------------------
#从TCGA下载数据，csv文件两列，分别是两个基因的表达量。


fname="C:\\Users\\admin\\Downloads\\export.csv"
data1=read.csv(fname,header=T,sep=",")
head(data1)

#计算r和p
ts=cor.test(data1$CSF1, data1$CD33); ts
str(ts)
p=ts$p.value;p
r=ts$estimate[['cor']];r
r0=round(r,2);r0
p0=formatC(p, format = "e", digits = 2);p0

#画图
library(ggplot2)
library(cowplot)
g=ggplot(data1, aes( log2(CSF1), log2(CD33) ))+
  geom_point( color="#F87B72", alpha=0.75, size=1)+
  geom_smooth(method='lm', se=F,color="black",size=0.5)+ #se=F不要置信区间的阴影
  theme_cowplot()+ #除掉主题背景阴影
  geom_text(data=data.frame(), size=6,aes(x=12,y=2.5,label=paste0("r = ",r0,"\n p = ",p0)))+
  theme(legend.position="none")+
  labs(x="CSF1 expression(log)",y="CD33 expression(log)")
g #58ACFA
library(Cairo)
CairoPDF(file="wangbl0.5.pdf",width=7,height=7)
g
dev.off()
#
# g+scale_y_log10()+scale_x_log10() #简便写法

#为什么趋势线是歪的？
#重新构建数据也是歪的，看来不是smooth和对数的原因。
data2=data1
data2$CSF1=log2(data1$CSF1)
data2$CD33=log2(data1$CD33)
ggplot(data2, aes( CSF1, CD33, alpha=0.2 ))+geom_point()+geom_smooth(method="lm")
#
#



========================================
R语言绘制（一维数据的）概率密度图 with ggplot2
----------------------------------------
https://www.jianshu.com/p/999475adcb32

1.实例1
#造数据
head=rnorm(500,10,1)
tail=rnorm(500,20,4)
data0=data.frame(tail,head)
head(data0)
#融合数据
library(reshape2)
data1=melt(data0)

ggplot(data1, aes(x = value)) + geom_line(colour = "cadetblue3", stat = "density") +
  geom_rug(aes(colour = variable), sides = "b")
#







2.实例2 https://www.cnblogs.com/wwxbi/p/6142410.html
# 这里的h没有大小顺序
h <- rweibull(100000, shape=5, scale=1)

概率直方图
ggplot(NULL,aes(x=h))+
  geom_histogram(binwidth = 0.01,fill="white",colour="red")+
  ggtitle("Weibull distribution \n 直方图")
#


概率密度图
ggplot(NULL,aes(x=h))+
  geom_density(colour="green")+
  ggtitle("Weibull distribution \n 概率密度图")
概率密度图，方法2
ggplot(NULL,aes(x=h))+
  geom_line(stat="density",colour="green")+
  ggtitle("Weibull distribution \n 概率密度图")
#

(2)密度函数
ggplot(pp,aes(x=pp$FoldEnrichment,fill=new,alpha = 1/10))+geom_density()
from: https://blog.csdn.net/zhangkx91/article/details/79034321






3. 画matrix(行为feature，列为细胞)中每行总数的分布

keep2=apply(apa4>=3,1,sum)>=5;table(keep2) #至少5个cell内表达，每个细胞内至少3个read支持
#105093  45533
apa5=apa4[keep2,]
ggplot(NULL, aes(x=log10(unname(apply(apa5,1,sum)) ) ))+#geom_density()+
  geom_histogram(binwidth = 0.03,fill="white",colour="red")+
  xlim(1,6)+
  #geom_vline(aes(xintercept=1.2),linetype="dashed")+
  labs(x='log10(Reads per polyA site)', title='PAS supported by at 3 reads per cell in at least 5 cells(45533PAS)')
#







========================================
母子图示例: 大图角落套小图
----------------------------------------

1. 核心要点是 
- 子图的背景要透明，否则覆盖后会很丑。
- 指定子图位置使用 grid包的 viewport() 函数 

(1) 效果: 主图是颜色分组的散点图，右上角显示每个分组的样本个数条形图。

library(ggplot2)
g=ggplot(mtcars, aes(mpg, wt, col=factor(gear) ))+
  geom_point()+#theme_bw()+
  scale_color_discrete("Gear");g

# barplot 
rs=as.data.frame( table(mtcars$gear) );rs
# 3  4  5 
# 15 12  5 
barDf=data.frame(
  x=rs$Var1,
  y=rs$Freq
)
barDf$label=barDf$y  #paste0(barDf$x, "gear: ", barDf$y)
barDf

p1=ggplot(barDf, aes(x, y, fill=factor(x)))+
  geom_bar(stat = "identity")+
  #scale_fill_manual("",values=c('red','blue'), labels=NULL)+
  labs(title="", x="", y="")+
  theme_classic()+
  # 添加条形图顶部文本
  geom_text( mapping=aes(x, y=y+3, label=label, angle=90 ), size=3 )+
  scale_y_continuous(expand = c(0,0), #y轴与底部无间隙
                     limits=c(0,21), #y轴范围
                     breaks = seq(0,20,10))+ #y轴刻度
  theme(legend.position="none", #不要图例
        
        axis.text = element_text(size = rel(0.7)),#y轴字体
        
        # no bg 背景透明，否则覆盖原图后很丑
        panel.background = element_rect(fill = "transparent",colour = NA),
        panel.grid.minor = element_blank(),
        panel.grid.major = element_blank(),
        plot.background = element_rect(fill = "transparent",colour = NA),
        
        # no x axis
        axis.ticks.x = element_blank(),
        axis.line.x = element_blank(),
        axis.text.x = element_blank());p1
print(p1)

# 
library(grid)
print(g) #主图

# 子图定位
vp <- viewport(width = 0.3, height = 0.5, #width\height表示插入图形的大小
               x = 0.5,y = 1, #x\y表示插入图形相对于图片底层just的位置
               just=c("left","top")) #按照左上角定位
print(p1,vp=vp)









========================================
ggplot2 自定义 批量小提琴图：单细胞不同亚群展示marker
----------------------------------------

1. 参考
https://www.nature.com/articles/nature24489 Fig.3c


















========================================
********** ggplot2 插件 **********
----------------------------------------

========================================
ggrepel 对ggplot2 点进行标注
----------------------------------------
可以自动画线，连接注释文字和点。
1.
# Seurat3 中使用到了

plot1 <- VariableFeaturePlot(pbmc)
plot2 <- LabelPoints(plot = plot1, points = top10, repel = TRUE)
CombinePlots(plots = list(plot1, plot2))





2.
geom_text怎么用？
g=ggplot(data, aes(PC1,PC2, color=sample))+geom_point()+
  geom_text(aes(PC1,PC2,color=sample,label=GSM,hjust = -0.1) )+
  xlim(-20,20)+
  theme_bw()
#

# plot
library(ggplot2)
g=ggplot(compareL, aes(log2(FC), -log10(q.value), color=threshold))+geom_point()+
  labs(title="Difference of 3'UTR length: sync VS normal HeLa",
       x="log2(3'UTR length fold change)")
g
#
#add text
dd_text = compareL[(abs(compareL$logFC) > 1.5) &(abs(compareL$logFC) < 5) & (compareL$q.value < 0.01),]
head(dd_text)
#View(dd_text)
dim(dd_text) #133


#添加文字-基因名
#install.packages("ggrepel") https://blog.csdn.net/woodcorpse/article/details/78955334
library(ggrepel)
g + geom_text(data=dd_text, aes(x=logFC, y=-log10(q.value), label=dd_text$id),
              colour="black",size=3)+ylim(0,20)
#
g+geom_text_repel(data=dd_text, aes(x=logFC, y=-log10(q.value), label=dd_text$id),
                  colour="black",size=3)+ylim(0,20)
#

如果注释太多，连线太密，可以设置透明度，防止点被盖住。







========================================
ggsignif箱线图添加显著性差异标识(多组分析)
----------------------------------------
# 直接在程序中嵌入数据
mydatatxt="
group value
T1 12.88
T1 13.06
T1 13.52
T2 13.96
T2 14.57
T2 15.28
T3 14.80
T3 14.04
T3 14.37
T3 13.97
T3 14.49
T4 14.47
T4 13.26
T4 14.14
"
mydata=read.table(text=mydatatxt, header=T) # text设置了，file就要留空。
mydata

#
#BiocManager::install('ggsignif')
library("ggsignif")
library('ggplot2')
# geom_signif()
# compare_means(value ~ group, data = exprSet_L,method="wilcox.test", paired=FALSE)
exprSet_L=mydata
gene_name='geneXX'

my_comparisons <- list(c("T1","T2"), c("T1","T3"),c("T1", "T4"))
ggplot(exprSet_L,aes(group,value))+
  geom_boxplot(width=0.5)+
  geom_jitter(aes(color=group))+
  theme(plot.title=element_text(size = 25),
        axis.text.x=element_text(size=25,angle=0),
        axis.text.y=element_text(size=25),
        axis.title.x=element_text(size = 25),
        axis.title.y=element_text(size = 25))+
  labs(title=paste0('Title:',gene_name),x=gene_name, y= 'Expression')+
  geom_signif(comparisons = my_comparisons,
              step_increase = 0.1,
              map_signif_level = T, #T显示星号，F显示p值
              test = t.test, size=1,textsize = 6)+
  theme_set(theme_set(theme_bw(base_size=22)))
# wilcox.test

# geom_signif(mapping = NULL, data = NULL, stat = "signif",
#             position = "identity", na.rm = FALSE, show.legend = NA,
#             inherit.aes = TRUE, comparisons = NULL, test = "wilcox.test",
#             test.args = NULL, annotations = NULL, map_signif_level = FALSE,
#             y_position = NULL, xmin = NULL, xmax = NULL, margin_top = 0.05,
#             step_increase = 0, tip_length = 0.03, size = 0.5, textsize = 3.88,
#             family = "", vjust = 0, ...)


ref:
https://www.jianshu.com/p/d8e968250ae3
