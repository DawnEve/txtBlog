shopNC 二次开发入门


========================================
ShopNC资料来源
----------------------------------------
官网演示站： http://www.shopnc.net/product-b2b2c.html

1.
shopNC和33hao.com什么关系呢？

2.
Shopnc的开发文档

3.
http://www.bcb5.com/yuanma/php/6798.html

SHOPNC B2B2C 好商城V5 33HAO-V5完整源码|新版首页+手机版+新版后台+微信+修复BUG
地址：http://pan.baidu.com/s/1nuIcw7R 密码：vdmh

更多下载：https://pan.baidu.com/share/home?uk=1736779371#category/type=0




========================================
木马语句位置 
----------------------------------------
1.
路径 admin/control/db.php
在方法 outpudb()内 第140行
preg_replace( '//e'.....  开头的这句话 
采用二进制编码 翻译后就是 在你DATA目录下建立A.PHP木马文件。

http://www.1pit.com/thread-1739-1-1.html


========================================
ShopNC运营
----------------------------------------
1.设置充值卡
后台 运营-平台充值卡，会生成充值卡号。


前台领用：
前台登录，左侧账户余额，顶部充值卡余额，顶部右侧充值卡充值。

2.调试模式
开启调试模式需要在config.ini.php中设置
$config['debug'] = true; //会在前台页面底部出现sql语句、加载文件等信息。

后台显示debug信息需要自己修改代码。
位置： admin/templates/default/layout/layout.php中最后一个php语句：
	if(1 or ...)


========================================
ShopNC学习笔记
----------------------------------------
http://blog.sina.com.cn/s/blog_5da653160102wm95.html

1、shopnc目录结构
admin         后台管理目录
chat             IM目录
circle           圈子目录
cms             CMS目录
microshop 微商城目录
shop            商城目录
core             框架目录
data             公共资源目录
mobile               手机客户端API
wap             wap商城
data > api          第三方API目录
data > cache     缓存文件目录
data > area     地区文件目录
data > model     数据对象文件目录
data > resource     静态资源文件目录
data > cache     缓存文件目录
data > config    配置文件目录
data > crontab 定时触发文件目录
data > log         系统运行日志目录
data > session SESSION文件存放目录
data > upload   上传图片目录
core > framework                        系统框架
core > framework > cache        缓存驱动
core > framework > core            核心文件
core > framework > db               数据层驱动
core > framework > function    系统方法
core > framework > libraries     类库
core > language      框架语言包目录
shop > install           安装目录
shop > language     语言包目录
shop > control        控制器目录
shop > templates    模板目录


2、Url地址分析
http://localhost/shopnc13/shop/index.php?act=goods&op=index&goods_id=53
 
index.php 前台入口文件
act 控制器
Op 方法


后台入口文件 admin/index.php?
http://shop.dawneve.cc/admin/index.php?act=dashboard&op=welcome
其实调用的是后台控制器welcome，中的dashboard方法。





3、MVC结构
Model     数据模型 data\model

shop的对应着：
View       视图    shop\templates
Controller 控制器  shop\control

后台的对应着：
View       视图    admin\templates
Controller 控制器  admin\control


4、数据模型
#\core\framework\libraries\model.php
$user=M(‘user’);
系统首先会查找model/user.model.php文件及内部的memberModel类是否存在，如果存在会查找model.php


5、重要的系统函数和系统类
\core\framework\libraries（系统类目录）
\core\framework\function（系统函数）
详细见手册


6、Shopnc前台控制器
系统内置4个控制器父级类，BaseHomeControl、BaseBuyControl、BaseMemberControl和BaseSellerControl分别适用于
前台展示、下单、会员中心、商家中心三类控制器。
文件位置：\shop\control\index.php 



7、 （前台）代码解释
1）前台品牌控制器解析
\shop\control\brand.php
	//加载语言包
	Language::read('home_brand_index');
	//使用模型获得品牌列表
	$model = Model();
	$brand_list = $model->table('brand')->select();
	//向模板抛出内容
	Tpl::output('brand_list',$brand_list);
	//设置页面标题
	Tpl::output('html_title',Language::get('brand_index_brand_list'));
	//输出SEO设置信息
	Model('seo')->type('brand')->show();
	//调用模板展示
	Tpl::showpage('brand');

2）（前台）品牌模板代码解析
\shop\templates\default\layout\home_layout.php
//代码250行




8、系统常量
RESOURCE_SITE_URL /data/resource



9、自定义系统常量
1）\data\config\config.ini.php
写自己的配置

2）\core\shopnc.php
定义常量


10、后台分页类
$rows = $model->page(2)->select();
Tpl::output('page', $model->showpage('3'));
Tpl::output('czh_data',$rows);



11、后台模块开发
1)F:\wamp\www\shopnc\admin\include\menu.php文件中填写如下代码：
 $arr['top'][] = array(
  'args' => 'czh',
  'text' => $lang['nc_czh']);
 $arr['left'][] = array(
  'nav' => 'czh',
  'text' => $lang['nc_czh'],
  'list' => array(
  0 => array('args'=>'index,czh_setting,czh','text'=>$lang['nc_czh_setting']),
  )
 );
 
2）F:\wamp\www\shopnc\admin\language\zh_cn\layout.php文件中填写如下代码
$lang['nc_czh'] = '云知梦';
$lang['nc_czh_setting'] = '云知梦设置';

3） F:\wamp\www\shopnc\admin\control文件夹下新建czh_setting.php(此处为控制器注意书写规则) 实例删除的方法书写
public function deleteOp(){
	$id=$_GET['id'];
	$model=Model('czh');
	$result=$model->delete($id);
	if($result){
		showMessage(L('nc_common_op_succ'),'index.php?act=czh_setting&op=index');
	}else{
		showMessage(L('nc_common_op_fail'),'index.php?act=czh_setting&op=index');
	}
}
4） F:\wamp\www\shopnc\admin\templates\default 文件夹下书写跳转的界面



12、模板切换
F:\wamp\www\shopnc\global.php

define('TPL_SHOP_NAME','default');//商城的默认模板
define('TPL_CIRCLE_NAME', 'default');//圈子的默认模板
define('TPL_MICROSHOP_NAME', 'default');//微商城的默认模板
define('TPL_CMS_NAME', 'default');//cms的默认模板
define('TPL_ADMIN_NAME', 'default');//后台的默认模板

查看更多phpcms相关知识视频 http://www.tudou.com/listplay/ZEv6Z7SP294.html



========================================
文件夹功能
----------------------------------------
shopnc有三款产品，b2b2c，c2c和o2o，用的同一个mvc框架和相同的开发规范，所以了解了其中一个，其他两款产品也就算理解了。

shopnc使用的自己开发的mvc框架，粗略的看了下，还是比较简单的。

文件夹功能如下
admin            后台
chat               在线im
circle              圈子
cms               cms文章系统
core               公共文件
data               数据存放
microshop       微商城
mobile             手机app服务端
shop               前台
wap                wap端


先看前台，前台的逻辑和模板都在shop目录中，web目录中index.php会自动转向到shop目录

shop的目录文件功能如下：
api                     外部api调用
config                 配置文件
control               控制器（业务逻辑）
framework          框架
install                 安装文件
language            多语言配置文件目录
resource             素材
templates           模板目录

mvc 框架中的 
m 在上级目录中 /data/model 中，
v 在当前目录 /shop/templates 中 ，
c 就是 /shop/control 文件夹






========================================
后台文件的加载顺序，新建后台模块并实现增删改查
----------------------------------------
1.
菜单保存在文件中，而不是数据库 admin/include/menu.php 

菜单解析 admin/templates/default/layout/index_layout.php 中js函数openItem(args)
	其中三个参数
	0-op 动作
	1-act 控制器
	2-nav 导航
	
查找方式：后台右击某button，审查元素，看到 onclick="openItem('base,setting,setting');",说明这是setting主导航下的菜单，
找到setting.php中的baseOP()方法。
（admin/control/setting.php）

其中的视图文件在admin/templates/default/settings.base.php中。



2.
（1）
按照这个顺序，可以自己造一个后台模块。
菜单 admin/include/menu.php 
可以添加一个顶部菜单、左侧子菜单：
//主菜单
$arr['top'][] = array(
	'args' 	=> 'wjl',
	'text' 	=> '用户管理(new)'
);

//子菜单
$arr['left'][] = array(
		'nav' => 'wjl',
		'text' => 'new item2',//不会显示
		'list' => array(
			array('args'=>'index,user,wjl',			    'text'=>'userIndex'),
			array('args'=>'list,user,wjl',	'text'=>'userList')
		)      
);
刷新后，可见后台有新菜单出现。


（2）新建表 xx_user
共三列数据 id name pass


(3)新建控制器
admin/control/user.php
模仿setting.php，添加indexOp和listOp方法。
	public function indexOp(){
		echo 'user-index()'; die();
	}

	public function listOp(){

		//获取数据
		$model = Model("user");
		$user_list=$model->select();

		//赋值到模板
		Tpl::output('user_list',$user_list);
		Tpl::showpage('user.index');//位置在admin/templates/default/user.index.php中
	}

（4）新建模板文件
admin/templates/default/user.index.php

<table border="1px" width='500px' style="margin:20px;">
	<th>id</th>
	<th>name</th>
	<th>pass</th>
	<th>action</th>
	
	<?php foreach($output['user_list'] as $k=>$v){?>
	<tr>
		<td><?php echo $v['id'];?></td>
		<td><?php echo $v['name'];?></td>
		<td><?php echo $v['pass'];?></td>
		<td><a href='?act=user&op=del&id=<?php echo $v['id'];?>'>删除</a> | 
			<a href='?act=user&op=edit&id=<?php echo $v['id'];?>'>修改</a></td>
	</tr>
	
	<?php }?>
</table>

（5）可以访问了。
可以通过后台 顶部菜单 用户管理 - userList查看。
也可以直接输入url: http://shop.dawneve.cc/admin/index.php?act=user&op=list


id	name	pass	action
1	wjl	123	删除 | 修改
2	jim	123	删除 | 修改
3	tom	123	删除 | 修改


(6可以继续添加delOp和editOp方法
	public function delOp(){
		$id=$_GET['id'];
		echo 'user-del('.$id.')';
		
		$model=Model('user');
		
		if($rs=$model->delete($id)){
			echo "success!";
			showMessage("删除成功！",'/admin/index.php?act=user&op=list');
		}else{
			var_dump($rs);
			showMessage("删除失败-.-",'/admin/index.php?act=user&op=list');
		}
	}

	public function editOp(){
		$id=$_GET['id'];
		echo 'user-edit('.$id.')';
	}
	
	
（7）写一个添加用户方法
先修改indexOp方法：
	public function indexOp(){
		echo 'user-index()'; 
		echo "<a href='?act=user&op=add'>添加新用户</a>";
	}

添加user.add.php模板文件：
<h1>添加用户信息</h1>

<form action="" method="post">
	<p>user:<input type="text" name="name"></p>
	<p>pass:<input type="password" name="pass"></p>
	
	<input type="submit" value="提交">
</form>


添加addOp方法：
	public function addOp(){
		echo 'user-add()';

		if(empty($_POST)){
			Tpl::showpage('user.add');//位置在admin/templates/default/user.add.php中
		}else{
			//debug($_POST);
			$model=Model('user');
			$rs=$model->insert($_POST);

			if($rs){
				echo "success!";
				showMessage("添加成功！",'/admin/index.php?act=user&op=list');
			}else{
				var_dump($rs);
				showMessage("添加失败-.-",'/admin/index.php?act=user&op=list');
			}
		}
	}


	
（8）完善修改用户的方法
editOp方法：
	public function editOp(){
		echo 'user-edit()';
		$id=$_GET['id'];
		$model=Model('user');

		if(empty($_POST)){
			$data=$model->find($id); 
			Tpl::output('data',$data);
			Tpl::showpage('user.edit');//位置在admin/templates/default/user.edit.php中
		}else{
			$rs=$model->update($_POST);

			if($rs){
				showMessage("更新成功！",'/admin/index.php?act=user&op=list');
			}else{
				showMessage("更新失败-.-",'/admin/index.php?act=user&op=list');
			}
		}
	}
	
	
对应的模板文件 admin/templates/default/user.edit.php：
<h1>添加用户信息</h1>
<?php 
debug($output['data']);
?>
<form action="" method="post">
	<input type="hidden" name="id" value="<?php echo $output['data']['id'];?>">
	<p>user:<input type="text" name="name" value="<?php echo $output['data']['name'];?>"></p>
	<p>pass:<input type="text" name="pass" value="<?php echo $output['data']['pass'];?>"></p>
	
	<input type="submit" value="提交">
</form>



========================================
支持的curd操作
----------------------------------------
F:\xampp\htdocs\shop\core\framework\libraries\model.php 

能查看各种CURD相关信息。



	
========================================
怎么替换后台模板
----------------------------------------

1.
从根目录的global.php中设置：
define('TPL_ADMIN_NAME', 'default'); //设置后台模板文件
位置在：F:\xampp\htdocs\shop\admin\templates\default中放置不同风格的模板，注意子文件夹和global.php中一致。

2.
在admin/index.php中又替换了一次变量：define('TPL_NAME',TPL_ADMIN_NAME);
为什么要换变量呢？
是因为该系统有很多子系统，都需要替换，比如cms子系统中cms/index.php文件也有：define('TPL_NAME',TPL_CMS_NAME);





========================================
后台分页类
----------------------------------------
1.
控制器admin/control/user.php 
	public function listOp(){
		//获取数据
		$model = Model("user");
		$user_list=$model->page(2)->select(); //分页，page的参数就是每页显示多少条

		//赋值到模板
		Tpl::output('user_list',$user_list);
		Tpl::output('pageInfo',$model->showpage());//传递分页信息
		
		Tpl::showpage('user.index');//位置在admin/templates/default/user.index.php中
	}

2.
模板 admin/templates/default/user.index.php 
<style>
a{color:blue;}
</style>
<table border="1px" width='500px' style="margin:20px;">
	<th>id</th>
	<th>name</th>
	<th>pass</th>
	<th>action</th>
	
	<?php foreach($output['user_list'] as $k=>$v){?>
	<tr>
		<td><?php echo $v['id'];?></td>
		<td><?php echo $v['name'];?></td>
		<td><?php echo $v['pass'];?></td>
		<td><a href='?act=user&op=del&id=<?php echo $v['id'];?>'>删除</a> | 
			<a href='?act=user&op=edit&id=<?php echo $v['id'];?>'>修改</a></td>
	</tr>
	
	<?php }?>
</table>

<?php echo $output['pageInfo']; //添加一句分页信息 ?>


3.访问：http://shop.dawneve.cc/admin/index.php?act=user&op=list&curpage=2

4.todo
还需要为分页写样式。





========================================
【数据字典】-数据表对应关系
----------------------------------------
1.
充值卡  _rcb_log表

2.
预存款  _member表的available_predeposit字段中

3.运费在 _store表的store_free_price字段中
满？免运费，按店铺计算。
设置位置： 商铺登录，订单物流->发货设置-》免运费额度。

4.订单状态 _order表的orderstat字段:订单状态：10(默认):未付款;11已付款;20:确认付款;30:已发货;40:已收货;50已完成;2已取消


5.统计报表：
后台 统计-》商品分析-》商品销售明细。
设置时间段，点击 放大镜图标 即可。

前提是要刷新好后台几个统计表。
xx_order_statis 月销量表
xx_stat_order 订单 
xx_stat_ordergoods 订购物品 
xx_stat_member 会员相关统计

xx_flowstat  访问统计量
xx_flowstat_1  
xx_flowstat_2
xx_vr_order_statis 虚拟物品销量

========================================
v0.8 没有统计报表，js的定时任务
----------------------------------------

有个计划任务，需要定时执行
位置：F:\xampp\htdocs\shop\crontab

本质就是这4个计划任务：

http://shop.dawneve.cc/crontab/cj_index.php?act=minutes
http://shop.dawneve.cc/crontab/cj_index.php?act=hour
http://shop.dawneve.cc/crontab/cj_index.php?act=month
http://shop.dawneve.cc/crontab/cj_index.php?act=date


//todo



========================================
----------------------------------------



========================================
----------------------------------------

	
========================================
----------------------------------------


========================================
----------------------------------------



========================================
----------------------------------------




